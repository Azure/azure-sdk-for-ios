resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

parameters:
  - name: BuildScheme
    type: string
    default: sdk
  - name: ServiceDirectory
    type: string
  - name: Artifacts
    type: object
    default: []
  - name: SDLStageRepositoriesToScan
    type: object
    default: []

extends:
  ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    settings:
      skipBuildTagsForGitHubPullRequests: true
    sdl:
      ${{ if and(eq(variables['Build.DefinitionName'], 'ios - core'), eq(variables['Build.SourceBranchName'], 'main'), eq(variables['System.TeamProject'], 'internal')) }}:
        autobaseline:
          isMainPipeline: true
          enableForGitHub: true
      sourceAnalysisPool:
        name: azsdk-pool-mms-win-2022-general
        image: azsdk-pool-mms-win-2022-1espt
        os: windows
      eslint:
        enabled: false
        justificationForDisabling: 'ESLint injected task has failures because it uses an old version of mkdirp. We should not fail for tools not controlled by the repo. See: https://dev.azure.com/azure-sdk/internal/_build/results?buildId=3499746'
      codeql:
        compiled:
          enabled: false
          justificationForDisabling: CodeQL times our pipelines out by running for 2+ hours before being force canceled.
      psscriptanalyzer:
        compiled: true
        break: true
      policy: M365
      credscan:
        toolVersion: 2.3.12.23
      sourceRepositoriesToScan:
        include:
         - ${{ parameters.SDLStageRepositoriesToScan}}

    stages:
      - stage: Build
        variables:
          - template: /eng/pipelines/templates/variables/image.yml@self
        jobs:
          - template: /eng/pipelines/templates/jobs/archetype-sdk-client.yml@self
            parameters:
              BuildScheme: ${{parameters.BuildScheme}}

      # The Prerelease and Release stages are conditioned on whether we are building a pull request and the branch.
      - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
          - template: /eng/pipelines/templates/stages/archetype-ios-release.yml@self
            parameters:
              DependsOn:
                - Build
              ServiceDirectory: ${{ parameters.ServiceDirectory }}
              Artifacts: ${{ parameters.Artifacts }}

